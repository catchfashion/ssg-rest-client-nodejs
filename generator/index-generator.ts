import * as _ from "lodash";
import * as path from "path";
import * as fs from "fs";

import type { Service } from "./service-discovery";

export class IndexGenerator {
  private readonly destination: string;
  private readonly services: Service[] = [];

  constructor(
    destination?: string,
  ) {
    this.destination = destination ?? path.resolve(__dirname, "..");
  }

  public addService(service: Service) {
    this.services.push(service);
  }

  public async emit() {
    await fs.writeFileSync(path.resolve(this.destination, path.resolve("src", "services", "index.ts")), this.renderIndex());
  }

  private renderIndex() {
    const services = _.sortBy(this.services, (r) => r.name);

    return `
      // THIS FILE IS AUTO-GENERATED. DO NOT EDIT THIS FILE DIRECTLY.
      // Edit generator/index-generator.ts if you want to make any changes.

      ${services.map(({ name }) => `import * as ${_.camelCase(name)} from "./${name}";`).join("\n")}
      ${services.map(({ name }) => `export { ${_.camelCase(name)} };`).join("\n")}

      export function createClients(key: string) {
        return {
          ${services.map(({ name }) => `${_.camelCase(name)}: new ${_.camelCase(name)}.Client(key),`).join("\n")}
        };
      }
    `;
  }
}
